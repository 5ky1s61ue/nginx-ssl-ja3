diff -r a2f5e25d6a28 src/event/ngx_event_openssl.c
--- a/src/event/ngx_event_openssl.c	Thu Aug 10 22:21:23 2017 +0300
+++ b/src/event/ngx_event_openssl.c	Sat Aug 19 23:03:53 2017 +0000
@@ -1221,6 +1221,51 @@
 }
 
 
+int
+ngx_SSL_early_cb_fn(SSL *s, int *al, void *arg) {
+
+    int               got_extensions;
+    int              *ext_out;
+    size_t            ext_len;
+    ngx_connection_t *c;
+
+    c = arg;
+    if (c == NULL) {
+        return 1;
+    }
+
+    if (c->ssl == NULL) {
+        return 1;
+    }
+
+    c->ssl->client_extensions_size = 0;
+
+    got_extensions = SSL_early_get1_extensions_present(s,
+                                                       &ext_out,
+                                                       &ext_len);
+    if (got_extensions) {
+        if (ext_out && ext_len > 0) {
+            c->ssl->client_extensions_size = ext_len;
+
+            c->ssl->client_extensions =
+                ngx_palloc(c->pool, sizeof(int) * ext_len);
+            if (c->ssl->client_extensions == NULL) {
+                OPENSSL_free(ext_out);
+                return 1;
+            }
+
+            ngx_memcpy(c->ssl->client_extensions,
+                       ext_out,
+                       sizeof(int) * ext_len);
+
+            OPENSSL_free(ext_out);
+        }
+    }
+
+    return 1;
+}
+
+
 ngx_int_t
 ngx_ssl_handshake(ngx_connection_t *c)
 {
@@ -1229,6 +1274,8 @@
 
     ngx_ssl_clear_error(c->log);
 
+    SSL_CTX_set_early_cb(c->ssl->session_ctx, ngx_SSL_early_cb_fn, c);
+
     n = SSL_do_handshake(c->ssl->connection);
 
     ngx_log_debug1(NGX_LOG_DEBUG_EVENT, c->log, 0, "SSL_do_handshake: %d", n);
diff -r a2f5e25d6a28 src/event/ngx_event_openssl.h
--- a/src/event/ngx_event_openssl.h	Thu Aug 10 22:21:23 2017 +0300
+++ b/src/event/ngx_event_openssl.h	Sat Aug 19 23:03:53 2017 +0000
@@ -85,6 +85,9 @@
     unsigned                    no_wait_shutdown:1;
     unsigned                    no_send_shutdown:1;
     unsigned                    handshake_buffer_set:1;
+
+    size_t                      client_extensions_size;
+    int                        *client_extensions;
 };
 
 
